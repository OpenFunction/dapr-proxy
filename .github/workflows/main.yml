name: Main CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/**'
      - 'pkg/**'
      - 'test/**'
      - 'Dockerfile'
      - 'go.mod'
      - 'main.go'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  e2e_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: E2E Tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create kind cluster
        uses: container-tools/kind-action@v1

      - name: install yq
        env:
          VERSION: v4.22.1
          BINARY: yq_linux_amd64
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
          tar xz && mv ${BINARY} /usr/local/bin/yq

      - name: Install dependent components
        run: |
          # Install Dapr
          dapr -v || (wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash)
          dapr init -k --runtime-version 1.8.3 --log-as-json --wait --timeout 600
          # Install kafka
          helm repo add strimzi https://strimzi.io/charts/
          helm install kafka-operator -n default strimzi/strimzi-kafka-operator
          kubectl apply -f test/kafka.yaml

      - name: Build and Push dapr-proxy image
        run: |
          docker build . -t openfunctiondev/dapr-proxy:ci -f Dockerfile --build-arg GOPROXY="https://proxy.golang.org"
          docker push openfunctiondev/dapr-proxy:ci

      - name: Bindings HTTP e2e test
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/e2e-test.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/e2e-test.sh bindings_http

      - name: Pubsub HTTP e2e test
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/e2e-test.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/e2e-test.sh pubsub_http

      - name: Bindings GRPC e2e test
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/e2e-test.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/e2e-test.sh bindings_grpc

      - name: Pubsub GRPC e2e test
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/e2e-test.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/e2e-test.sh pubsub_grpc